<?php

namespace post\entities\Poll;

use post\entities\Poll\Polls;
use Yii;
use yii\helpers\ArrayHelper;

/**
 * This is the model class for table "polls-answers".
 *
 * @property int $id
 * @property int $poll_id
 * @property string $answer
 *
 * @property Polls $poll
 */
class PollsAnswers extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return '{{%polls-answers}}';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['poll_id'], 'integer'],
            [['answer'], 'required'],
            [['answer'], 'string'],
            [['poll_id'], 'exist', 'skipOnError' => true, 'targetClass' => Polls::className(), 'targetAttribute' => ['poll_id' => 'id']],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'poll_id' => 'Poll ID',
            'answer' => 'Answer',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPoll()
    {
        return $this->hasOne(Polls::className(), ['id' => 'poll_id']);
    }

    public function answersList():array
    {
        return ArrayHelper::map(static::find()->asArray()->all(),'id' , 'answer');
    }

    public  function getShuffle($list)
    {
        if ( !is_array( $list ) ) {
            return $list;
        }

        $keys = array_keys( $list );
        shuffle( $keys );
        $random = array();
        foreach ( $keys as $key ) {
            $random[$key] = $list[$key];
        }
        return $random;
    }

    public static function find()
    {
        return parent::find(); // TODO: Change the autogenerated stub
    }

    public function getAnswersPoll(): array
    {
        return self::find()->all();
    }

    /**
     * @return array|\yii\db\ActiveRecord
     */
    public static function findOn()
    {
        return self::find()->one();
    }


    /**
     * @param $list
     * @return array
     */
    public static function getShuffleAssoc($list)
    {
        if (!is_array($list)) {
            return $list;
        }

        $keys = array_keys($list);
        shuffle($keys);
        $random = array();
        foreach ($keys as $key) {
            $random[$key] = $list[$key];
        }
        return $random;
    }
}
